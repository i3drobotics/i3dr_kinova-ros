<?xml version="1.0"?>
<!--XML-->
<launch>
    <!-- SETUP ARGUMENTS -->
    <!-- enable/disable functions -->
    <arg name="rviz" default="false" />
    <arg name="sim" default="true"/> <!-- WARNING: Untested in real robot use with caution! -->
    <arg name="moveit" default="false"/>
    <arg name="mozaic" default="false"/>
    <arg name="octomap" default="false"/>

    <arg name="imu" default="false"/>
    <arg name="camera_mesh" default="true"/>
    <arg name="camera_name" default="i3dr_titania"/>
    <arg name="kinova_robotType" default="j2s7s000"/>
    <arg name="kinova_robotName" default="$(arg kinova_robotType)"/>
    <arg name="kinova_robotSerial" default="PJ00000001030703130"/>
    <arg name="use_trajectory_controller" default="true"/>

    <group if="$(arg sim)">
        <!-- Load gazebo world -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find i3dr_kinova_control)/worlds/room.world"/>
            <arg name="debug" value="false" />
            <arg name="gui" value="true" />
            <arg name="paused" value="true"/>
            <arg name="use_sim_time" value="true"/>
        </include>

        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -model $(arg kinova_robotName) -param robot_description
            -J $(arg kinova_robotType)_joint_1 0.0
            -J $(arg kinova_robotType)_joint_2 2.9
            -J $(arg kinova_robotType)_joint_3 0.0
            -J $(arg kinova_robotType)_joint_4 1.3
            -J $(arg kinova_robotType)_joint_5 -2.07
            -J $(arg kinova_robotType)_joint_6 1.4
            -J $(arg kinova_robotType)_joint_7 0.0" />
    </group>
    <group unless="$(arg sim)">
        <!-- WARNING: Untested in real robot use with caution! -->
        <include file="$(find kinova_bringup)/launch/kinova_robot.launch">
            <arg name="kinova_robotType" value="$(arg kinova_robotType)"/>
            <arg name="kinova_robotName" value="$(arg kinova_robotName)" />
            <arg name="kinova_robotSerial" value="$(arg kinova_robotSerial)" />
            <arg name="use_urdf" value="false" />
        </include>
    </group>

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find i3dr_kinova_control)/urdf/i3dr_titania_kinova_standalone.urdf.xacro' en_imu:=$(arg imu) camera_name:=$(arg camera_name) en_mesh:=$(arg camera_mesh) arm_name:=$(arg kinova_robotType)"/>

    <!-- Kinova control launcher -->
    <include file="$(find kinova_control)/launch/kinova_control.launch">
        <arg name="kinova_robotName" value="$(arg kinova_robotName)"/>
        <arg name="kinova_robotType" value="$(arg kinova_robotType)"/>
        <arg name="use_trajectory_controller" value="$(arg use_trajectory_controller)"/>
        <arg name="is7dof" value="true"/>
    </include>

    <!-- Titania control launcher -->
    <include file="$(find i3dr_titania)/launch/titania.launch">
        <arg name="sim" value="false"/> <!-- simulated camera urdf is loaded from this launcher -->
        <arg name="real" value="$(eval sim == 0)"/> <!-- launch real camera when sim=false -->
        <arg name="camera_mesh" value="true"/> <!-- display detailed mesh of camera -->
        <arg name="state_publisher" value="false"/> <!-- state publisher is handelled by this launcher instead-->
        <arg name="depth_max" value="10"/>
        <arg name="stereo_algorithm" value="0"/>
    </include>

    <group if="$(arg moveit)">
        <include file="$(find i3dr_titania_kinova_moveit_config)/launch/move_group_$(arg kinova_robotType).launch">
            <arg name="allow_trajectory_execution" value="true"/>
            <arg name="fake_execution" value="false"/>
            <arg name="info" value="true"/>
            <arg name="debug" value="false"/>
            <arg name="joint_states_ns" value="/$(arg kinova_robotType)/joint_states"/>
            <arg name="controller_manager" value="$(arg kinova_robotType)_ros_control"/>
        </include>

        <!-- ros-control Controller parameters-->  
        <rosparam file="$(find i3dr_titania_kinova_moveit_config)/config/controllers_ros_control.yaml"/>

        <!-- Run Rviz and load the default config to see the state of the move_group node -->
        <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
            args="-d $(find i3dr_kinova_control)/rviz/kinova_titania.rviz" output="screen">
            <rosparam command="load" file="$(find i3dr_titania_kinova_moveit_config)/config/kinematics.yaml"/>
        </node>
    </group>

    <group unless="$(arg moveit)">
        <node if="$(arg rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
            args="-d $(find i3dr_kinova_control)/rviz/kinova_titania.rviz" output="screen">
        </node>
    </group>

</launch>